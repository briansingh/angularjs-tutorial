"use strict";var angularjsTutorial=angular.module("angularjsTutorial",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ui.router","firebase"]);angular.module("angularjsTutorial").constant("firebaseUrl","https://bsangularjstutorial.firebaseio.com/"),angularjsTutorial.config(["$stateProvider","$urlRouterProvider",function(o,e){o.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl as mainCtrl",resolve:{user:["AuthService",function(o){return o.requireUser()}]}}).state("login",{url:"/login?redirect",templateUrl:"app/login/login.html",controller:"LoginCtrl as loginCtrl"}).state("profile",{url:"/profile",templateUrl:"app/profile/profile.html",controller:"ProfileCtrl as profileCtrl"}).state("contact",{url:"/contact",templateUrl:"app/contact/contact.html",controller:"ContactCtrl as contactCtrl"}),e.otherwise("/")}]),angularjsTutorial.run(["$rootScope","$log","$state",function(o,e,r){o.$on("$stateChangeError",function(o,t,n,l,a,s){e.log("$stateChangeError",o,t,n,l,a,s),"AUTH_REQUIRED"===s&&(e.log("$stateChangeError, redirecting to login",t.name),r.go("login",{redirect:t.name}))})}]),angularjsTutorial.controller("GlobalCtrl",["AuthService","$log","$state","ProfileFireService",function(o,e,r,t){var n=this;o.onAuth(function(o){e.log("AuthService.onAuth",o),n.user=o,o&&(n.user.name=o.uid,t.getProfileName(o.uid).then(function(o){n.user.name=o}))}),e.log("User is ",this.user),n.logout=function(){o.logout().then(function(){e.log("GlobalCtrl AuthService.logout"),r.go("home")})},n.globalObject={message:"Global"}}]),angular.module("angularjsTutorial").factory("AuthService",["$window","$log","$firebase","$firebaseAuth","firebaseUrl",function(o,e,r,t,n){var l=new o.Firebase(n),a=t(l),s={};return s.onAuth=function(o){a.$onAuth(function(r){e.log("AuthService $onAuth callback",r),o(r)})},s.createUser=function(o,r){return a.$createUser(o,r).then(function(){return e.log("auth.$createUser succeeded"),a.$authWithPassword({email:o,password:r})})},s.getUser=function(){return a.$waitForAuth()},s.requireUser=function(){return a.$requireAuth()},s.getUserSync=function(){return a.$getAuth()},s.login=function(o,e){return a.$authWithPassword({email:o,password:e})},s.logout=function(){a.$unauth()},s}]),angular.module("angularjsTutorial").factory("ProfileFireService",["$window","$log","$q","$timeout","$firebase","firebaseUrl","$http",function(o,e,r,t,n,l,a){e.log("ProfileFireService instantiated");var s,i,u=new Firebase(l);return{getProfileName:function(o){var t=r.defer();return a.get(l+"users/"+o+"/name.json").success(function(o){e.log("ProfileFireService getProfileName success",o),t.resolve(o)}).error(function(o){e.log("ProfileFireService getProfileName error",o),t.reject(o)}),t.promise},setProfileName:function(o,e){var r=new Firebase(l+"users/"+o);r.update({name:e})},resetProfilePassword:function(o,r){u.resetPassword({email:o},function(o){s=null===o?"Password reset email sent successfully":"Error sending password reset email: "+o,e.log(s),r(s)})},deleteProfile:function(o,r,t){u.removeUser({email:o,password:r},function(o){if(o){switch(o.code){case"INVALID_USER":s="The specified user account does not exist.";break;case"INVALID_PASSWORD":s="The specified user account password is incorrect.";break;default:s="Error removing user: "+o}i=!1}else s="User removed successfully",i=!0;e.log(s),t({message:s,redirect:i})})}}}]),angular.module("angularjsTutorial").factory("TodoFireService",["$window","$log","$q","$timeout","$firebase","firebaseUrl",function(o,e,r,t,n,l){e.log("TodoFireService instantiated");var a,s=function(){};return s(),{getTodos:function(o){var t=r.defer(),s=new Firebase(l+"users/"+o.uid+"/todos"),i=n(s);return i.$asArray().$loaded().then(function(o){a=o,e.log("todos loaded",a===o,o),t.resolve(a)}).catch(function(o){e.log("Error retrieving todos from firebase",o)}),t.promise},addTodo:function(o){var t=r.defer();return a.$add({title:o.title,completed:!1}).then(function(o){e.log("new todo added",o.$id,o.key(),o,a),e.log("resolving addTodo promise"),t.resolve(o)}).catch(function(o){console.log("error adding todo",o),e.log("rejecting addTodo promise"),t.reject(o)}),t.promise},removeTodo:function(o){var t=r.defer();return a.$remove(o).then(function(o){e.log("resolving removeTodo promise"),t.resolve(o)}).catch(function(o){e.log("error removing todo",o),e.log("rejecting removeTodo promise"),t.reject(o)}),t.promise},saveTodo:function(o){var t=r.defer();return a.$save(o).then(function(o){e.log("resolving saveTodo promise"),t.resolve(o)}).catch(function(o){e.log("error saving todo",o),e.log("rejecting saveTodo promise"),t.reject(o)}),t.promise}}}]),angular.module("angularjsTutorial").factory("TodoService",["$window","$log","$q","$timeout","$http","firebaseUrl",function(o,e,r,t,n,l){e.log("TodoService instantiated");var a;return{getTodos:function(){var o=r.defer();return n.get(l+"todos.json").success(function(r){e.log("TodoService getTodos success",r),a=Object.keys(r).map(function(o){var e=r[o];return e.$id=o,e}),e.log("TodoService getTodos mapping",a),o.resolve(a)}).error(function(r){e.log("TodoService getTodos error",r),o.reject(r)}),o.promise},addTodo:function(o){var t=r.defer(),s=angular.copy(o);return n.post(l+"todos.json",s).success(function(o){e.log("TodoService addTodo success",o),s.$id=o.name,a.push(s),t.resolve(s)}).error(function(o){e.log("TodoService addTodo error",o),t.reject(o)}),t.promise},removeTodo:function(o){var t=r.defer();return n.delete(l+"todos/"+o.$id+".json").success(function(r){e.log("TodoService removeTodo success",r),a.splice(a.indexOf(o),1),t.resolve()}).error(function(o){e.log("TodoService removeTodo error",o),t.reject(o)}),t.promise},saveTodo:function(o){var t=r.defer(),a=angular.copy(o);return a.$id=void 0,n.put(l+"todos/"+o.$id+".json",a).success(function(r){e.log("TodoService saveTodo success",r),t.resolve(o)}).error(function(o){e.log("TodoService saveTodo error",o),t.reject(o)}),t.promise}}}]),angular.module("angularjsTutorial").factory("Todo",["$resource","$log","firebaseUrl",function(o,e,r){return e.log("Todo instantiated"),o(r+"todos/:id",{id:"@$id"},{query:{isArray:!0,url:r+"todos.json",transformResponse:function(o){e.log("Todo query response",o);var r=angular.fromJson(o),t=Object.keys(r).map(function(o){var e=r[o];return e.$id=o,e});return t}},get:{url:r+"todos/:id.json"},add:{method:"POST",url:r+"todos.json",transformResponse:function(o){return e.log("Todo add transformResponse",o,this),angular.fromJson(o)}},save:{url:r+"todos/:id.json",method:"PUT",transformRequest:function(o){e.log("Todo save transformResponse",o,this);var r=angular.copy(o);return r.$id=void 0,angular.toJson(r)}},update:{url:r+"todos/:id.json",method:"PUT",transformRequest:function(o){e.log("Todo update transformResponse",o,this);var r=angular.copy(o);return r.$id=void 0,angular.toJson(r)}},remove:{url:r+"todos/:id.json",method:"DELETE"}})}]),angular.module("angularjsTutorial").directive("ajstTodoList",function(){return{templateUrl:"components/todo-list/todo-list.html",transclude:!0,scope:{onGetTodos:"&",onRemoveTodo:"&",onSaveTodo:"&",newTodoTitle:"=",user:"="},controllerAs:"ajstTodoListCtrl",controller:["$scope","$element","$attrs","$transclude","$log","TodoFireService",function(o,e,r,t,n,l){n.log("ajstTodoList controller instantiated");var a=this;a.getTodos=function(){return l.getTodos(o.user).then(function(e){return a.todos=e,n.log("ajstTodoList calling $scope.onGetTodos()"),o.onGetTodos({todos:a.todos}),a.todos})},a.removeTodo=function(e){return l.removeTodo(e).then(function(){n.log("ajstTodoList calling $scope.onRemoveTodo()"),o.onRemoveTodo({todo:e})})},a.getTodoClasses=function(o){return{completed:o.completed}},a.saveTodo=function(e){return l.saveTodo(e).then(function(){n.log("ajstTodoList calling $scope.onSaveTodo()"),o.onSaveTodo({todo:e})})},a.getTodos()}]}}),angular.module("angularjsTutorial").controller("LoginCtrl",["$scope","$state","$stateParams","$log","AuthService","ProfileFireService",function(o,e,r,t,n,l){var a=this;a.mode="Login",a.err=null,t.log("LoginCtrl instantiated, redirect",r.redirect),a.submit=function(){return a.err=null,void 0==a.email?(a.err={message:"Please enter email"},!1):"ResetPassword"===a.mode?(l.resetProfilePassword(a.email,function(o){a.err={message:o};var e=angular.element($("#ErrorMessage"));e.scope().$apply()}),!1):void 0==a.password?(a.err={message:"Please enter password"},!1):void n["Login"===a.mode?"login":"createUser"](a.email,a.password).then(function(o){t.log("AuthService "+a.mode+" succeeded, redirecting",o),e.go(r.redirect||"/home")},function(o){t.log("AuthService.login failed",o),a.err=o})};var s=n.getUserSync();s&&e.go(r.redirect||"/home")}]),angular.module("angularjsTutorial").controller("MainCtrl",["$scope","$log","$q","TodoFireService",function(o,e,r,t){e.log("MainCtrl instantiated");var n=this;n.newTodoTitle="",n.addTodo=function(o){var e;return t.addTodo(o).then(function(o){e=o,n.newTodoTitle=""},function(o){console.log(o)})},n.onGetTodos=function(o){e.log("MainCtrl.onGetTodos called",o)},n.onRemoveTodo=function(o){e.log("MainCtrl.onRemoveTodo called",o)},n.onSaveTodo=function(o){e.log("MainCtrl.onSaveTodo called",o)}}]),angular.module("angularjsTutorial").controller("ContactCtrl",["$scope",function(){console.log("ContactCtrl instantiated")}]),angular.module("angularjsTutorial").controller("ProfileCtrl",["$scope","$state","$stateParams","$log","ProfileFireService",function(o,e,r,t,n){t.log("ProfileCtrl instantiated");var l=this;l.mode="Edit",l.err=null,l.submit=function(o,r,t){return l.err=null,void 0==r?(l.err={message:"Please enter name"},!1):void 0==t?(l.err={message:"Please enter email"},!1):void 0==l.password?(l.err={message:"Please enter password"},!1):("Edit"===l.mode&&n.setProfileName(o,r),"Delete"===l.mode?(n.deleteProfile(t,l.password,function(o){if(l.err={message:o.message},o.redirect)e.go("home");else{var r=angular.element($("#ErrorMessage"));r.scope().$apply()}}),!1):void 0)}}]),angular.module("angularjsTutorial").controller("NavbarCtrl",["$scope",function(o){o.date=new Date}]),function(o){try{o=angular.module("angularjsTutorial")}catch(e){o=angular.module("angularjsTutorial",[])}o.run(["$templateCache",function(o){o.put("app/contact/contact.html",'<div class="container"><h1>Contact</h1><img src="../../assets/images/voyager-graphic2.jpg"></div>')}])}(),function(o){try{o=angular.module("angularjsTutorial")}catch(e){o=angular.module("angularjsTutorial",[])}o.run(["$templateCache",function(o){o.put("app/login/login.html",'<div class="container login-page"><h4 id="ErrorMessage" class="row">{{loginCtrl.err.message}}</h4><h1 class="row">{{loginCtrl.mode}}</h1><h2>{{globalCtrl.user}}</h2><form ng-submit="loginCtrl.submit()" class="row"><div class="form-group"><label for="">Email address</label> <input type="email" class="form-control" placeholder="Email" ng-model="loginCtrl.email"></div><div class="form-group" ng-show="loginCtrl.mode!=\'ResetPassword\'"><label>Password</label> <input type="password" class="form-control" placeholder="Password" ng-model="loginCtrl.password"></div><button type="submit" class="btn btn-default">{{loginCtrl.mode}}</button></form><p class="row" ng-show="loginCtrl.mode==\'Login\'"><button type="button" class="btn btn-link" ng-click="loginCtrl.mode=\'Register\'">Register new account</button></p><p class="row" ng-show="loginCtrl.mode==\'Login\'"><button type="button" class="btn btn-link" ng-click="loginCtrl.mode=\'ResetPassword\'">Reset password</button></p></div>')}])}(),function(o){try{o=angular.module("angularjsTutorial")}catch(e){o=angular.module("angularjsTutorial",[])}o.run(["$templateCache",function(o){o.put("app/main/main.html",'<div class="container"><h1>Todo</h1><div class="row"><div class="col-md-12"><form ng-submit="mainCtrl.addTodo({ title : mainCtrl.newTodoTitle })"><input type="text" class="form-control" ng-model="mainCtrl.newTodoTitle" placeholder="Type title here"></form></div></div><div class="row"><div class="col-md-12"><ajst-todo-list on-get-todos="mainCtrl.onGetTodos(todos)" on-remove-todo="mainCtrl.onRemoveTodo(todo)" on-save-todo="mainCtrl.onSaveTodo(todo)" new-todo-title="mainCtrl.newTodoTitle" user="globalCtrl.user"><h2>First todo list</h2><div>Going to add a new todo with the title "{{mainCtrl.newTodoTitle}}"</div></ajst-todo-list></div></div></div>')}])}(),function(o){try{o=angular.module("angularjsTutorial")}catch(e){o=angular.module("angularjsTutorial",[])}o.run(["$templateCache",function(o){o.put("app/profile/profile.html",'<div class="container"><h4 id="ErrorMessage" class="row">{{profileCtrl.err.message}}</h4><h1>Profile</h1><h1 class="row">{{profileCtrl.mode}}</h1><form ng-submit="profileCtrl.submit(globalCtrl.user.uid, globalCtrl.user.name, globalCtrl.user.password.email)" class="row"><div class="form-group" ng-show="profileCtrl.mode==\'Edit\'"><label for="">User Name</label> <input type="name" class="form-control" placeholder="Name" ng-model="globalCtrl.user.name"></div><div class="form-group"><label for="">Email address</label> <input type="email" class="form-control" placeholder="Email" ng-model="globalCtrl.user.password.email"></div><div class="form-group"><label>Password</label> <input type="password" class="form-control" placeholder="Password" ng-model="profileCtrl.password"></div><button type="submit" class="btn btn-default">{{profileCtrl.mode}}</button></form><p class="row"><button type="button" class="btn btn-link" ng-click="profileCtrl.mode=\'Edit\'">Edit profile</button></p><p class="row"><button type="button" class="btn btn-link" ng-click="profileCtrl.mode=\'Delete\'">Delete profile</button></p></div>')}])}(),function(o){try{o=angular.module("angularjsTutorial")}catch(e){o=angular.module("angularjsTutorial",[])}o.run(["$templateCache",function(o){o.put("components/navbar/navbar.html",'<nav class="navbar navbar-default" ng-controller="NavbarCtrl"><div class="navbar-header"><a class="navbar-brand" href="https://github.com/Swiip/generator-gulp-angular"><span class="glyphicon glyphicon-home"></span> Gulp Angular</a></div><div class="collapse navbar-collapse" id="bs-example-navbar-collapse-6"><ul class="nav navbar-nav"><li class="active"><a ui-sref="home">Home</a></li><li><a ng-href="#">About</a></li><li><a ui-sref="contact">Contact</a></li><li><a ui-sref="login" ng-hide="globalCtrl.user">Log In</a></li><li><a ng-href="#" ng-show="globalCtrl.user" ng-click="globalCtrl.logout()">Log Out</a></li><li><a ui-sref="profile" ng-show="globalCtrl.user">Profile</a></li></ul><ul class="nav navbar-nav navbar-center"><li>Current user: {{ globalCtrl.user.name }}</li></ul><ul class="nav navbar-nav navbar-right"><li>Current date: {{ date | date:\'yyyy-MM-dd\' }}</li></ul></div></nav>')}])}(),function(o){try{o=angular.module("angularjsTutorial")}catch(e){o=angular.module("angularjsTutorial",[])}o.run(["$templateCache",function(o){o.put("components/todo-list/todo-list.html",'<ng-transclude></ng-transclude><div>Inside directive template, new todo title: {{newTodoTitle}}<br><span ng-bind="newTodoTitle"></span><br><input ng-model="newTodoTitle" type="text"></div><ul class="todos"><li class="todo-item slide-animation" ng-repeat="todo in ajstTodoListCtrl.todos track by todo.$id" ng-class="ajstTodoListCtrl.getToDoClasses(todo)"><div class="input-group"><span class="input-group-addon"><input type="checkbox" ng-model="todo.completed" ng-change="ajstTodoListCtrl.saveTodo(todo)"></span> <input type="text" class="form-control" ng-model="todo.title" ng-change="ajstTodoListCtrl.saveTodo(todo)"> <span class="input-group-btn"><button class="btn btn-default" ng-click="ajstTodoListCtrl.removeTodo(todo)"><span class="glyphicon glyphicon-remove-circle"><span class="sr-only">Remove</span></span></button></span></div></li></ul>')}])}();